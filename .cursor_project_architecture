# Project Structure
dmkd_additions/
└── difficulty_estimation/
    ├── compute_metrics.py         # Metrics computation
    │   ├── _normalize_model_name()    # Model name standardization
    │   ├── _normalize_dataset_name()  # Dataset name standardization
    │   ├── _normalize_context()       # Context standardization
    │   │   └── Fixed: Properly detects with_system/no_system
    │   ├── _parse_filename()          # Filename metadata extraction
    │   │   └── Fixed: Correctly handles all model variants
    │   ├── pairwise_mismatch()        # Pairwise mismatch calculation
    │   ├── compute_metrics()          # Process new predictions
    │   ├── load_old_experiments_metrics() # Load historical data
    │   └── create_latex_table()       # Generate LaTeX tables
    │       └── New: Improved color normalization for PM scores
    └── results/                  # Results storage
        └── compute_metrics/      # Metrics computation results
            ├── compute_metrics/          # Current metrics
            │   └── current_metrics.csv
            ├── load_old_experiments_metrics/ # Historical metrics
            │   └── historical_metrics.csv
            └── create_latex_table/       # LaTeX tables
                └── difficulty_estimation_metrics.tex

# Key Components
## Metrics Computation (compute_metrics.py)
### Core Functions
1. compute_metrics()
   - Scans for prediction files
   - Correctly handles all model variants
   - Properly detects context
   - Calculates accuracy and PM scores

2. _parse_filename()
   - Handles ft_ prefix for fine-tuned models
   - Correctly extracts with_system/no_system
   - Standardizes model naming
   - Maintains proper casing

3. create_latex_table()
   - Shows all context variants
   - Proper spacing between models
   - Correct model naming
   - Improved color coding with normalized PM values
   - Inverted intensity scale for PM scores

## Current Status
- All functions working perfectly
- Context variants properly handled
- Model names standardized
- Color coding optimized
- Ready for paper preparation

## Planned Improvements
- Add comprehensive testing
- Enhance documentation
- Create visualizations
- Analyze results for paper
