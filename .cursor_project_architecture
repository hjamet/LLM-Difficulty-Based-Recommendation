# Project Structure
dmkd_additions/text_simplification/
├── a_DatasetCreation.ipynb         # Dataset preparation
│   ├── download_data()             # Load training data
│   ├── format_data()              # Prepare for training
│   └── encode_dataset()           # Tokenize inputs
│
├── b_FineTuningMistral.ipynb      # Model training
│   ├── load_model()               # Initialize with LoRA
│   ├── train_mistral()            # Training function
│   └── ray_launcher()             # Cluster execution
│
├── c_MistralEvaluation.ipynb      # Model evaluation
│   ├── evaluate_mistral()         # Evaluation pipeline
│   ├── compute_predictions()      # Generate outputs
│   └── format_results()           # Save predictions
│
├── h_CreateFigures.ipynb          # Results visualization (to update)
│   ├── create_metrics_table()     # Add color gradients
│   ├── create_example_table()     # Match new style
│   └── save_tables()             # Export LaTeX
│
└── results/                      # Results storage
    ├── metrics/                  # Evaluation scores
    ├── predictions/              # Model outputs
    └── figures/                  # Generated tables

# Components
## Evaluation Pipeline
1. Data Preparation
   - Load test sentences
   - Balance across levels
   - Tokenize inputs

2. Model Inference
   - Support multiple models
   - Handle both modes (zero-shot/fine-tuned)
   - Generate predictions

3. Results Processing
   - Compute metrics
   - Format predictions
   - Save outputs

## Table Generation
- Current:
  - Basic metrics display
  - Simple formatting
  - Example showcase

- To Add:
  - Color gradients
  - Best result highlighting
  - Consistent styling
  - Proper spacing
